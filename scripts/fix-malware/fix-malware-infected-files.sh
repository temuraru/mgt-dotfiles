#!/bin/bash

# crontab entry: */30 * * * * ./public_html/fix-malware/fix-malware-infected-files.sh
# -sh-4.2$ ./public_html/n98-magerun.phar sys:cron:list # check existing Magento crons

datetime=$(date +'%Y%m%d_%H%M')
prefix="$datetime."

log_info() {
  echo "$prefix $1!" >>"$log_file"
}

sendemail() {
  subject="$datetime. FlorariaMobila.ro - files restored"
  content="Patch file: $patch_file!\nSuspicious file: $suspicious_file"
  recipients="temuraru@gmail.com , comenzi@florariamobila.ro"
  echo -e "$content" | mail -s "$subject" -a "$patch_file" "$recipients"
  # echo -e interprets the two characters "\n" as a new line.
  # echo "Licence file: LICENSE.txt" | mailx -s "FlorariaMobila.ro - files restored" -a LICENSE.txt temuraru@gmail.com
}

compute_files_difference() {
  suspicious_file_size=$(wc -l "$suspicious_file" | awk '{print $1}') # `wc -C` - for characters count!
  clean_file_size=$(wc -l "$clean_file" | awk '{print $1}')

  difference_in_lines=$((suspicious_file_size - clean_file_size))
}

restore_changed_file() {
  # --color-words - for seeing better in cli
  # --no-pager - to not depend on less or other paginators that might stop parsing the difference because of wrong arguments
  # --no-index - to be able to compare files outside of a repository
  # git --no-pager diff --no-index --color-words "$suspicious_file" "$clean_file" # cli version
  patch_file="$output_folder/${suspicious_base_file_name}_gitdiff_${datetime}.patch"
  git --no-pager diff --no-index "$suspicious_file" "$clean_file" >"$patch_file" # output-to-file version
  log_info "Diff: $difference_in_lines lines. Restoring $suspicious_file from $clean_base_file_name"
  cp -f "$clean_file" "$suspicious_file" # maybe send mail here - with the patch as attachment?!
  #sendemail
}

process_file() {
  suspicious_file="$watched_files_root/$file"
  if [ ! -f "$suspicious_file" ]; then
    log_info "Suspicious file ($suspicious_file) does not exist. Try next file (if any)"
    return
  fi
  suspicious_base_file_name=$(basename "$suspicious_file")

  clean_file="$clean_files_root/${suspicious_base_file_name}_clean"
  if [ ! -f "$clean_file" ]; then
    clean_file="$clean_files_root/${suspicious_base_file_name}"
  fi
  if [ ! -f "$clean_file" ]; then
    log_info "Clean file ($clean_file) does not exist. Try next file (if any)"
    return
  fi
  clean_base_file_name=$(basename "$clean_file")

  compute_files_difference
  # log_info "Lines numbers comparison: suspicious file: $suspicious_file_size vs clean file: $clean_file_size. Diff: $difference_in_lines lines"
  if test $difference_in_lines -gt 0; then
    restore_changed_file
  fi
}

current_script="$(realpath ${BASH_SOURCE[0]})"
current_path="$(dirname $current_script)"
clean_files_root="$current_path/source"

output_folder="$current_path/output"
[ -d "$output_folder" ] || mkdir "$output_folder"
log_file="$current_path/watch_files.log"

watched_files_root="$current_path/.."                                    # "$HOME/public_html"
suspicious_files=("fix-malware/source/sample.txt") # suspicious_files=('lib/Zend/Cache/Backend/Interface.php' 'app/Mage.php') # suspicious_files=() 

final_prefix=''
log_info "Start running cleanup"
if ((${#suspicious_files[@]})); then
  for file in ${suspicious_files[*]}; do
    process_file
  done
else
  final_prefix='Empty input. No files to process! '
fi
log_info "${final_prefix}Finished running @ $(date +'%Y%m%d_%H%M')"
